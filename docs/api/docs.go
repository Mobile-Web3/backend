// Package api GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/accounts/balance": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Получить инфу о балансе",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id сети",
                        "name": "chainId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "адрес кошелька",
                        "name": "address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/v1.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/account.BalanceResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/accounts/create": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Получение аккаунта по мнемонику",
                "parameters": [
                    {
                        "description": "body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.CreateAccountInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/v1.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/account.KeyResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/accounts/mnemonic": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Создание мнемоника",
                "parameters": [
                    {
                        "description": "body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.CreateMnemonicInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/v1.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/accounts/restore": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Получение аккаунта по ключу",
                "parameters": [
                    {
                        "description": "body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.RestoreAccountInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/v1.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/account.KeyResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/chains": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chains"
                ],
                "summary": "Получение данных о сетях",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/v1.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/chain.ShortResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/transactions/send": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Отправить транзакцию",
                "parameters": [
                    {
                        "description": "body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transaction.SendInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/v1.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/transaction.SendResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/transactions/send/firebase": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Отправить транзакцию с подпиской на события тендерминта с пушами в firebase",
                "parameters": [
                    {
                        "description": "body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transaction.SendInputFirebase"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/v1.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/transaction.SendResponseFirebase"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/transactions/simulate": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Симуляция транзакции для расчета параметров",
                "parameters": [
                    {
                        "description": "body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transaction.SimulateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/v1.apiResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/transaction.SimulateResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "account.BalanceResponse": {
            "type": "object",
            "properties": {
                "availableAmount": {
                    "type": "string"
                },
                "stakedAmount": {
                    "type": "string"
                },
                "totalAmount": {
                    "type": "string"
                }
            }
        },
        "account.CreateAccountInput": {
            "type": "object",
            "properties": {
                "accountPath": {
                    "type": "integer"
                },
                "chainPrefixes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "coinType": {
                    "type": "integer"
                },
                "indexPath": {
                    "type": "integer"
                },
                "mnemonic": {
                    "type": "string"
                }
            }
        },
        "account.CreateMnemonicInput": {
            "type": "object",
            "properties": {
                "mnemonicSize": {
                    "type": "integer"
                }
            }
        },
        "account.KeyResponse": {
            "type": "object",
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "key": {
                    "type": "string"
                }
            }
        },
        "account.RestoreAccountInput": {
            "type": "object",
            "properties": {
                "chainPrefixes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "key": {
                    "type": "string"
                }
            }
        },
        "chain.ShortResponse": {
            "type": "object",
            "properties": {
                "base": {
                    "type": "string"
                },
                "bech32Prefix": {
                    "type": "string"
                },
                "chainId": {
                    "type": "string"
                },
                "chainName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "display": {
                    "type": "string"
                },
                "keyAlgos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "logoPngUrl": {
                    "type": "string"
                },
                "logoSvgUrl": {
                    "type": "string"
                },
                "prettyName": {
                    "type": "string"
                },
                "slip44": {
                    "type": "integer"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "transaction.SendInput": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "chainId": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "gasAdjusted": {
                    "type": "string"
                },
                "gasPrice": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "memo": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "transaction.SendInputFirebase": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "chainId": {
                    "type": "string"
                },
                "firebaseToken": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "gasAdjusted": {
                    "type": "string"
                },
                "gasPrice": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "memo": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "transaction.SendResponse": {
            "type": "object",
            "properties": {
                "txHash": {
                    "type": "string"
                }
            }
        },
        "transaction.SendResponseFirebase": {
            "type": "object",
            "properties": {
                "txHash": {
                    "type": "string"
                },
                "withEvents": {
                    "type": "boolean"
                }
            }
        },
        "transaction.SimulateInput": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "chainId": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "memo": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "transaction.SimulateResponse": {
            "type": "object",
            "properties": {
                "averageGasPrice": {
                    "type": "string"
                },
                "gasAdjusted": {
                    "type": "string"
                },
                "highGasPrice": {
                    "type": "string"
                },
                "lowGasPrice": {
                    "type": "string"
                }
            }
        },
        "v1.apiResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "isSuccess": {
                    "type": "boolean"
                },
                "result": {}
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Swagger UI",
	Description:      "API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
